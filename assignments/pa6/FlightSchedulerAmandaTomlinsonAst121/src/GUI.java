
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;

public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    BookingQueries bookingQueries = new BookingQueries();
    PassengerQueries passengerQueries = new PassengerQueries();
    FlightQueries flightQueries = new FlightQueries();
    DayQueries dayQueries = new DayQueries();
    
    public GUI() {
        initComponents();
        setPassengerComboBoxes();
        setFlightComboBoxes();
        setDayComboBoxes();
        setMonthComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        flightSchedulerTitle = new javax.swing.JLabel();
        mainTabbedPane = new javax.swing.JTabbedPane();
        passengerPanel = new javax.swing.JPanel();
        passengerNamePanel = new javax.swing.JPanel();
        passengerNameLabel = new javax.swing.JLabel();
        passengerNameTextField = new javax.swing.JTextField();
        passengerAddButton = new javax.swing.JButton();
        passengerMessageLabel = new javax.swing.JLabel();
        addDayPanel = new javax.swing.JPanel();
        dayPanel = new javax.swing.JPanel();
        dayTextField = new javax.swing.JTextField();
        dayLabel = new javax.swing.JLabel();
        monthPanel = new javax.swing.JPanel();
        monthLabel = new javax.swing.JLabel();
        monthComboBox = new javax.swing.JComboBox<>();
        yearPanel = new javax.swing.JPanel();
        yearLabel = new javax.swing.JLabel();
        yearTextField = new javax.swing.JTextField();
        addDayButton = new javax.swing.JButton();
        addDayMessage = new javax.swing.JLabel();
        flightPanel = new javax.swing.JPanel();
        addFlightMainLabel = new javax.swing.JLabel();
        addFlightNamePanel = new javax.swing.JPanel();
        addFlightNameLabel = new javax.swing.JLabel();
        addFlightNameTextField = new javax.swing.JTextField();
        addFlightSeatsPanel = new javax.swing.JPanel();
        addFlightSeatsLabel = new javax.swing.JLabel();
        addFlightSeatsTextField = new javax.swing.JTextField();
        addFlightButton = new javax.swing.JButton();
        addFlightMessage = new javax.swing.JLabel();
        dropFlightMainLabel = new javax.swing.JLabel();
        dropFlightPanel = new javax.swing.JPanel();
        dropFlightLabel = new javax.swing.JLabel();
        dropFlightComboBox = new javax.swing.JComboBox<>();
        dropFlightButton = new javax.swing.JButton();
        dropFlightScrollPane1 = new javax.swing.JScrollPane();
        dropFlightTextArea = new javax.swing.JTextArea();
        bookingPanel = new javax.swing.JPanel();
        bookingButton = new javax.swing.JButton();
        bookingDayPanel = new javax.swing.JPanel();
        bookingDayLabel = new javax.swing.JLabel();
        bookingDayComboBox = new javax.swing.JComboBox<>();
        bookingFlightPanel = new javax.swing.JPanel();
        bookingFlightLabel = new javax.swing.JLabel();
        bookingFlightComboxBox = new javax.swing.JComboBox<>();
        bookingPassengerPanel = new javax.swing.JPanel();
        bookingPassengerLabel = new javax.swing.JLabel();
        bookingPassengerComboBox = new javax.swing.JComboBox<>();
        bookingMessageLabel = new javax.swing.JLabel();
        cancelPanel = new javax.swing.JPanel();
        cancelButton = new javax.swing.JButton();
        cancelDayPanel = new javax.swing.JPanel();
        cancelDayLabel = new javax.swing.JLabel();
        cancelDayComboBox = new javax.swing.JComboBox<>();
        cancelPassengerPanel = new javax.swing.JPanel();
        cancelPassengerLabel = new javax.swing.JLabel();
        cancelPassengerComboBox = new javax.swing.JComboBox<>();
        cancelResultsScrollPane = new javax.swing.JScrollPane();
        cancelResultsTextArea = new javax.swing.JTextArea();
        statusPanel = new javax.swing.JPanel();
        statusTicketsButton = new javax.swing.JButton();
        statusTIcketsFlightPanel = new javax.swing.JPanel();
        statusTicketsFlightLabel = new javax.swing.JLabel();
        statusTicketsFlightComboBox = new javax.swing.JComboBox<>();
        statusTicketsDayPanel = new javax.swing.JPanel();
        statusTicketsDayLabel = new javax.swing.JLabel();
        statusTicketsDayComboBox = new javax.swing.JComboBox<>();
        statusWaitlistDayPanel = new javax.swing.JPanel();
        statusWaitlistDayLabel = new javax.swing.JLabel();
        statusWaitlistDayComboBox = new javax.swing.JComboBox<>();
        statusWaitlistButton = new javax.swing.JButton();
        statusTicketsMainLabel = new javax.swing.JLabel();
        statusWaitlistMainLabel = new javax.swing.JLabel();
        statusTicketsScrollPane = new javax.swing.JScrollPane();
        statusTicketsTextArea = new javax.swing.JTextArea();
        statusWaitlistScrollPane = new javax.swing.JScrollPane();
        statusWaitlistTextArea = new javax.swing.JTextArea();
        statusPassengerBookingsMainLabel = new javax.swing.JLabel();
        statusPassengerBookingsNamePanel = new javax.swing.JPanel();
        statusPassengerBookingsNameLabel = new javax.swing.JLabel();
        statusPassengerBookingsNameComboBox = new javax.swing.JComboBox<>();
        statusPassengerBookingsButton = new javax.swing.JButton();
        statusPassengerBookingsScrollPane = new javax.swing.JScrollPane();
        statusPassengerBookingsTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFont(new java.awt.Font("Courier", 0, 18)); // NOI18N

        flightSchedulerTitle.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        flightSchedulerTitle.setText("Flight Scheduler");

        passengerNameLabel.setText("Passenger Name:");

        passengerNameTextField.setToolTipText("Enter name of passenger");
        passengerNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passengerNameTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout passengerNamePanelLayout = new javax.swing.GroupLayout(passengerNamePanel);
        passengerNamePanel.setLayout(passengerNamePanelLayout);
        passengerNamePanelLayout.setHorizontalGroup(
            passengerNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passengerNamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(passengerNameLabel)
                .addContainerGap(263, Short.MAX_VALUE))
            .addComponent(passengerNameTextField, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        passengerNamePanelLayout.setVerticalGroup(
            passengerNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passengerNamePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(passengerNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passengerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        passengerAddButton.setText("Add Passenger");
        passengerAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passengerAddButtonActionPerformed(evt);
            }
        });

        passengerMessageLabel.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        passengerMessageLabel.setText("       ");
        passengerMessageLabel.setToolTipText("");

        javax.swing.GroupLayout passengerPanelLayout = new javax.swing.GroupLayout(passengerPanel);
        passengerPanel.setLayout(passengerPanelLayout);
        passengerPanelLayout.setHorizontalGroup(
            passengerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passengerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(passengerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(passengerPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(passengerMessageLabel))
                    .addGroup(passengerPanelLayout.createSequentialGroup()
                        .addComponent(passengerNamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passengerAddButton)))
                .addGap(0, 255, Short.MAX_VALUE))
        );
        passengerPanelLayout.setVerticalGroup(
            passengerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passengerPanelLayout.createSequentialGroup()
                .addGroup(passengerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(passengerPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(passengerNamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(passengerPanelLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(passengerAddButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(passengerMessageLabel)
                .addContainerGap(470, Short.MAX_VALUE))
        );

        mainTabbedPane.addTab("Add Passenger", passengerPanel);

        dayTextField.setToolTipText("Enter name of passenger");
        dayTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayTextFieldActionPerformed(evt);
            }
        });

        dayLabel.setText("Day:");

        javax.swing.GroupLayout dayPanelLayout = new javax.swing.GroupLayout(dayPanel);
        dayPanel.setLayout(dayPanelLayout);
        dayPanelLayout.setHorizontalGroup(
            dayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dayLabel)
                .addContainerGap(96, Short.MAX_VALUE))
            .addComponent(dayTextField, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        dayPanelLayout.setVerticalGroup(
            dayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dayPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(dayLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        monthLabel.setText("Month:");

        javax.swing.GroupLayout monthPanelLayout = new javax.swing.GroupLayout(monthPanel);
        monthPanel.setLayout(monthPanelLayout);
        monthPanelLayout.setHorizontalGroup(
            monthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(monthPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(monthLabel)
                .addContainerGap(80, Short.MAX_VALUE))
            .addComponent(monthComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        monthPanelLayout.setVerticalGroup(
            monthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(monthPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(monthLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(monthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        yearLabel.setText("Year:");

        yearTextField.setToolTipText("Enter name of passenger");
        yearTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout yearPanelLayout = new javax.swing.GroupLayout(yearPanel);
        yearPanel.setLayout(yearPanelLayout);
        yearPanelLayout.setHorizontalGroup(
            yearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(yearPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(yearLabel)
                .addContainerGap(93, Short.MAX_VALUE))
            .addComponent(yearTextField, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        yearPanelLayout.setVerticalGroup(
            yearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(yearPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(yearLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(yearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        addDayButton.setText("Add Day");
        addDayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDayButtonActionPerformed(evt);
            }
        });

        addDayMessage.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        addDayMessage.setText("       ");
        addDayMessage.setToolTipText("");

        javax.swing.GroupLayout addDayPanelLayout = new javax.swing.GroupLayout(addDayPanel);
        addDayPanel.setLayout(addDayPanelLayout);
        addDayPanelLayout.setHorizontalGroup(
            addDayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addDayPanelLayout.createSequentialGroup()
                .addComponent(dayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(monthPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(yearPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addDayButton)
                .addGap(0, 274, Short.MAX_VALUE))
            .addGroup(addDayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addDayMessage)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addDayPanelLayout.setVerticalGroup(
            addDayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addDayPanelLayout.createSequentialGroup()
                .addGroup(addDayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addDayPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(addDayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(yearPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(monthPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addDayPanelLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(addDayButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addDayMessage)
                .addContainerGap(476, Short.MAX_VALUE))
        );

        mainTabbedPane.addTab("Add Day", addDayPanel);

        addFlightMainLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        addFlightMainLabel.setText("Add Flight");

        addFlightNameLabel.setText("Flight Name:");

        addFlightNameTextField.setToolTipText("Enter name of passenger");
        addFlightNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFlightNameTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addFlightNamePanelLayout = new javax.swing.GroupLayout(addFlightNamePanel);
        addFlightNamePanel.setLayout(addFlightNamePanelLayout);
        addFlightNamePanelLayout.setHorizontalGroup(
            addFlightNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addFlightNamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addFlightNameLabel)
                .addContainerGap(64, Short.MAX_VALUE))
            .addComponent(addFlightNameTextField, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        addFlightNamePanelLayout.setVerticalGroup(
            addFlightNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addFlightNamePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addFlightNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addFlightNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        addFlightSeatsLabel.setText("Seats:");

        javax.swing.GroupLayout addFlightSeatsPanelLayout = new javax.swing.GroupLayout(addFlightSeatsPanel);
        addFlightSeatsPanel.setLayout(addFlightSeatsPanelLayout);
        addFlightSeatsPanelLayout.setHorizontalGroup(
            addFlightSeatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addFlightSeatsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addFlightSeatsLabel)
                .addContainerGap(64, Short.MAX_VALUE))
            .addComponent(addFlightSeatsTextField)
        );
        addFlightSeatsPanelLayout.setVerticalGroup(
            addFlightSeatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addFlightSeatsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addFlightSeatsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addFlightSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        addFlightButton.setText("Add Flight");
        addFlightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFlightButtonActionPerformed(evt);
            }
        });

        addFlightMessage.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        addFlightMessage.setText("       ");
        addFlightMessage.setToolTipText("");

        dropFlightMainLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        dropFlightMainLabel.setText("Drop Flight");

        dropFlightLabel.setText("Flight:");

        javax.swing.GroupLayout dropFlightPanelLayout = new javax.swing.GroupLayout(dropFlightPanel);
        dropFlightPanel.setLayout(dropFlightPanelLayout);
        dropFlightPanelLayout.setHorizontalGroup(
            dropFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropFlightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dropFlightLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(dropFlightComboBox, 0, 259, Short.MAX_VALUE)
        );
        dropFlightPanelLayout.setVerticalGroup(
            dropFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropFlightPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(dropFlightLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dropFlightComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        dropFlightButton.setText("Drop Flight");
        dropFlightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropFlightButtonActionPerformed(evt);
            }
        });

        dropFlightTextArea.setColumns(20);
        dropFlightTextArea.setFont(new java.awt.Font("Courier", 0, 13)); // NOI18N
        dropFlightTextArea.setRows(5);
        dropFlightScrollPane1.setViewportView(dropFlightTextArea);

        javax.swing.GroupLayout flightPanelLayout = new javax.swing.GroupLayout(flightPanel);
        flightPanel.setLayout(flightPanelLayout);
        flightPanelLayout.setHorizontalGroup(
            flightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(flightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(flightPanelLayout.createSequentialGroup()
                        .addGroup(flightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addFlightMainLabel)
                            .addComponent(dropFlightMainLabel))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(flightPanelLayout.createSequentialGroup()
                        .addGroup(flightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addFlightMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(flightPanelLayout.createSequentialGroup()
                                .addComponent(addFlightNamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addFlightSeatsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addFlightButton))
                            .addGroup(flightPanelLayout.createSequentialGroup()
                                .addComponent(dropFlightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dropFlightButton)))
                        .addGap(0, 358, Short.MAX_VALUE))
                    .addComponent(dropFlightScrollPane1)))
        );
        flightPanelLayout.setVerticalGroup(
            flightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightPanelLayout.createSequentialGroup()
                .addComponent(addFlightMainLabel)
                .addGroup(flightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(flightPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(addFlightButton))
                    .addGroup(flightPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(flightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addFlightSeatsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addFlightNamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addFlightMessage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dropFlightMainLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(flightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dropFlightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dropFlightButton))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dropFlightScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(291, Short.MAX_VALUE))
        );

        mainTabbedPane.addTab("Add/Drop Flight", flightPanel);

        bookingButton.setText("Book this Flight");
        bookingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingButtonActionPerformed(evt);
            }
        });

        bookingDayLabel.setText("Day:");

        bookingDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingDayComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bookingDayPanelLayout = new javax.swing.GroupLayout(bookingDayPanel);
        bookingDayPanel.setLayout(bookingDayPanelLayout);
        bookingDayPanelLayout.setHorizontalGroup(
            bookingDayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bookingDayComboBox, 0, 175, Short.MAX_VALUE)
            .addGroup(bookingDayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bookingDayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bookingDayPanelLayout.setVerticalGroup(
            bookingDayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookingDayPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bookingDayLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bookingDayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        bookingFlightLabel.setText("Flight:");

        javax.swing.GroupLayout bookingFlightPanelLayout = new javax.swing.GroupLayout(bookingFlightPanel);
        bookingFlightPanel.setLayout(bookingFlightPanelLayout);
        bookingFlightPanelLayout.setHorizontalGroup(
            bookingFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookingFlightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bookingFlightLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(bookingFlightComboxBox, 0, 344, Short.MAX_VALUE)
        );
        bookingFlightPanelLayout.setVerticalGroup(
            bookingFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookingFlightPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bookingFlightLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bookingFlightComboxBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bookingPassengerLabel.setText("Passenger:");

        bookingPassengerComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingPassengerComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bookingPassengerPanelLayout = new javax.swing.GroupLayout(bookingPassengerPanel);
        bookingPassengerPanel.setLayout(bookingPassengerPanelLayout);
        bookingPassengerPanelLayout.setHorizontalGroup(
            bookingPassengerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookingPassengerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bookingPassengerLabel)
                .addContainerGap(271, Short.MAX_VALUE))
            .addComponent(bookingPassengerComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        bookingPassengerPanelLayout.setVerticalGroup(
            bookingPassengerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookingPassengerPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bookingPassengerLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bookingPassengerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        bookingMessageLabel.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        bookingMessageLabel.setText("    ");

        javax.swing.GroupLayout bookingPanelLayout = new javax.swing.GroupLayout(bookingPanel);
        bookingPanel.setLayout(bookingPanelLayout);
        bookingPanelLayout.setHorizontalGroup(
            bookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bookingPanelLayout.createSequentialGroup()
                        .addComponent(bookingFlightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bookingDayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(bookingPassengerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookingMessageLabel)
                    .addComponent(bookingButton))
                .addContainerGap(248, Short.MAX_VALUE))
        );
        bookingPanelLayout.setVerticalGroup(
            bookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bookingFlightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookingDayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bookingPassengerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bookingButton)
                .addGap(18, 18, 18)
                .addComponent(bookingMessageLabel)
                .addContainerGap(361, Short.MAX_VALUE))
        );

        mainTabbedPane.addTab("Book a Flight", bookingPanel);

        cancelButton.setText("Cancel Flight(s)");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        cancelDayLabel.setText("Day:");

        cancelDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelDayComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cancelDayPanelLayout = new javax.swing.GroupLayout(cancelDayPanel);
        cancelDayPanel.setLayout(cancelDayPanelLayout);
        cancelDayPanelLayout.setHorizontalGroup(
            cancelDayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cancelDayComboBox, 0, 175, Short.MAX_VALUE)
            .addGroup(cancelDayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cancelDayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cancelDayPanelLayout.setVerticalGroup(
            cancelDayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cancelDayPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelDayLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelDayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        cancelPassengerLabel.setText("Passenger:");

        cancelPassengerComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelPassengerComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cancelPassengerPanelLayout = new javax.swing.GroupLayout(cancelPassengerPanel);
        cancelPassengerPanel.setLayout(cancelPassengerPanelLayout);
        cancelPassengerPanelLayout.setHorizontalGroup(
            cancelPassengerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cancelPassengerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cancelPassengerLabel)
                .addContainerGap(271, Short.MAX_VALUE))
            .addComponent(cancelPassengerComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        cancelPassengerPanelLayout.setVerticalGroup(
            cancelPassengerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cancelPassengerPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelPassengerLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelPassengerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        cancelResultsTextArea.setColumns(20);
        cancelResultsTextArea.setFont(new java.awt.Font("Courier", 0, 13)); // NOI18N
        cancelResultsTextArea.setRows(5);
        cancelResultsScrollPane.setViewportView(cancelResultsTextArea);

        javax.swing.GroupLayout cancelPanelLayout = new javax.swing.GroupLayout(cancelPanel);
        cancelPanel.setLayout(cancelPanelLayout);
        cancelPanelLayout.setHorizontalGroup(
            cancelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cancelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cancelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cancelPanelLayout.createSequentialGroup()
                        .addComponent(cancelPassengerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelDayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(248, Short.MAX_VALUE))
                    .addComponent(cancelResultsScrollPane)
                    .addGroup(cancelPanelLayout.createSequentialGroup()
                        .addComponent(cancelButton)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        cancelPanelLayout.setVerticalGroup(
            cancelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cancelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cancelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cancelDayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelPassengerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(cancelButton)
                .addGap(18, 18, 18)
                .addComponent(cancelResultsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(364, Short.MAX_VALUE))
        );

        mainTabbedPane.addTab("Cancel Flight(s)", cancelPanel);

        statusTicketsButton.setLabel("View Booked Seats");
        statusTicketsButton.setPreferredSize(new java.awt.Dimension(100, 29));
        statusTicketsButton.setRequestFocusEnabled(false);
        statusTicketsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusTicketsButtonActionPerformed(evt);
            }
        });

        statusTicketsFlightLabel.setText("Flight:");

        statusTicketsFlightComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusTicketsFlightComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout statusTIcketsFlightPanelLayout = new javax.swing.GroupLayout(statusTIcketsFlightPanel);
        statusTIcketsFlightPanel.setLayout(statusTIcketsFlightPanelLayout);
        statusTIcketsFlightPanelLayout.setHorizontalGroup(
            statusTIcketsFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusTIcketsFlightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusTicketsFlightLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(statusTicketsFlightComboBox, 0, 221, Short.MAX_VALUE)
        );
        statusTIcketsFlightPanelLayout.setVerticalGroup(
            statusTIcketsFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusTIcketsFlightPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(statusTicketsFlightLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusTicketsFlightComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        statusTicketsDayLabel.setText("Day:");

        javax.swing.GroupLayout statusTicketsDayPanelLayout = new javax.swing.GroupLayout(statusTicketsDayPanel);
        statusTicketsDayPanel.setLayout(statusTicketsDayPanelLayout);
        statusTicketsDayPanelLayout.setHorizontalGroup(
            statusTicketsDayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusTicketsDayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusTicketsDayLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(statusTicketsDayComboBox, 0, 170, Short.MAX_VALUE)
        );
        statusTicketsDayPanelLayout.setVerticalGroup(
            statusTicketsDayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusTicketsDayPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(statusTicketsDayLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusTicketsDayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        statusWaitlistDayLabel.setText("Day:");

        javax.swing.GroupLayout statusWaitlistDayPanelLayout = new javax.swing.GroupLayout(statusWaitlistDayPanel);
        statusWaitlistDayPanel.setLayout(statusWaitlistDayPanelLayout);
        statusWaitlistDayPanelLayout.setHorizontalGroup(
            statusWaitlistDayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusWaitlistDayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusWaitlistDayLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(statusWaitlistDayComboBox, 0, 221, Short.MAX_VALUE)
        );
        statusWaitlistDayPanelLayout.setVerticalGroup(
            statusWaitlistDayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusWaitlistDayPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(statusWaitlistDayLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusWaitlistDayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        statusWaitlistButton.setLabel("View Waitlist");
        statusWaitlistButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusWaitlistButtonActionPerformed(evt);
            }
        });

        statusTicketsMainLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        statusTicketsMainLabel.setText("View Booked Seats");

        statusWaitlistMainLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        statusWaitlistMainLabel.setText("View Waitlist");

        statusTicketsTextArea.setEditable(false);
        statusTicketsTextArea.setColumns(20);
        statusTicketsTextArea.setFont(new java.awt.Font("Courier", 0, 13)); // NOI18N
        statusTicketsTextArea.setRows(5);
        statusTicketsScrollPane.setViewportView(statusTicketsTextArea);

        statusWaitlistTextArea.setEditable(false);
        statusWaitlistTextArea.setColumns(20);
        statusWaitlistTextArea.setFont(new java.awt.Font("Courier", 0, 13)); // NOI18N
        statusWaitlistTextArea.setRows(5);
        statusWaitlistScrollPane.setViewportView(statusWaitlistTextArea);

        statusPassengerBookingsMainLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        statusPassengerBookingsMainLabel.setText("View Passenger Bookings");

        statusPassengerBookingsNameLabel.setText("Passenger:");

        javax.swing.GroupLayout statusPassengerBookingsNamePanelLayout = new javax.swing.GroupLayout(statusPassengerBookingsNamePanel);
        statusPassengerBookingsNamePanel.setLayout(statusPassengerBookingsNamePanelLayout);
        statusPassengerBookingsNamePanelLayout.setHorizontalGroup(
            statusPassengerBookingsNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPassengerBookingsNamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusPassengerBookingsNameLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(statusPassengerBookingsNameComboBox, 0, 221, Short.MAX_VALUE)
        );
        statusPassengerBookingsNamePanelLayout.setVerticalGroup(
            statusPassengerBookingsNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPassengerBookingsNamePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(statusPassengerBookingsNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusPassengerBookingsNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        statusPassengerBookingsButton.setText("View Passenger Bookings");
        statusPassengerBookingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusPassengerBookingsButtonActionPerformed(evt);
            }
        });

        statusPassengerBookingsTextArea.setEditable(false);
        statusPassengerBookingsTextArea.setColumns(20);
        statusPassengerBookingsTextArea.setFont(new java.awt.Font("Courier", 0, 13)); // NOI18N
        statusPassengerBookingsTextArea.setRows(5);
        statusPassengerBookingsScrollPane.setViewportView(statusPassengerBookingsTextArea);

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(statusPanelLayout.createSequentialGroup()
                        .addComponent(statusPassengerBookingsNamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(statusPassengerBookingsButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(statusPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(statusTicketsScrollPane)
                            .addComponent(statusWaitlistScrollPane)
                            .addComponent(statusPassengerBookingsScrollPane)
                            .addGroup(statusPanelLayout.createSequentialGroup()
                                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(statusWaitlistMainLabel)
                                    .addComponent(statusTicketsMainLabel)
                                    .addComponent(statusPassengerBookingsMainLabel)
                                    .addGroup(statusPanelLayout.createSequentialGroup()
                                        .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(statusPanelLayout.createSequentialGroup()
                                                .addComponent(statusWaitlistDayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(statusWaitlistButton))
                                            .addGroup(statusPanelLayout.createSequentialGroup()
                                                .addComponent(statusTIcketsFlightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(statusTicketsDayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(statusTicketsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusTicketsMainLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(statusTicketsDayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(statusTIcketsFlightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(statusTicketsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusTicketsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(statusWaitlistMainLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(statusWaitlistDayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusWaitlistButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusWaitlistScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, statusPanelLayout.createSequentialGroup()
                        .addComponent(statusPassengerBookingsMainLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(statusPassengerBookingsNamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(statusPassengerBookingsButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusPassengerBookingsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        statusTicketsButton.getAccessibleContext().setAccessibleName("View Ticketed Passengers");

        mainTabbedPane.addTab("Status", statusPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(flightSchedulerTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(mainTabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(flightSchedulerTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mainTabbedPane))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bookingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingButtonActionPerformed
        bookFlightHandler();
    }//GEN-LAST:event_bookingButtonActionPerformed

    private void bookingPassengerComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingPassengerComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookingPassengerComboBoxActionPerformed

    private void bookingDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingDayComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookingDayComboBoxActionPerformed

    private void passengerAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passengerAddButtonActionPerformed
        addPassengerHandler();
    }//GEN-LAST:event_passengerAddButtonActionPerformed

    private void passengerNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passengerNameTextFieldActionPerformed
        addPassengerHandler();
    }//GEN-LAST:event_passengerNameTextFieldActionPerformed

    private void dayTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dayTextFieldActionPerformed

    private void yearTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearTextFieldActionPerformed

    private void addDayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDayButtonActionPerformed
        addDayHandler();
    }//GEN-LAST:event_addDayButtonActionPerformed

    private void addFlightNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFlightNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addFlightNameTextFieldActionPerformed

    private void addFlightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFlightButtonActionPerformed
        addFlightHandler();
    }//GEN-LAST:event_addFlightButtonActionPerformed

    private void dropFlightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropFlightButtonActionPerformed
        dropFlightHandler();
    }//GEN-LAST:event_dropFlightButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        cancelFlightsHandler();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void cancelDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelDayComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelDayComboBoxActionPerformed

    private void cancelPassengerComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelPassengerComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelPassengerComboBoxActionPerformed

    private void statusPassengerBookingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusPassengerBookingsButtonActionPerformed
        statusPassengerBookingsHandler();
    }//GEN-LAST:event_statusPassengerBookingsButtonActionPerformed

    private void statusWaitlistButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusWaitlistButtonActionPerformed
        statusWaitlistByDayHandler();
    }//GEN-LAST:event_statusWaitlistButtonActionPerformed

    private void statusTicketsFlightComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusTicketsFlightComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusTicketsFlightComboBoxActionPerformed

    private void statusTicketsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusTicketsButtonActionPerformed
        statusTicketsByFlightDayHandler();
    }//GEN-LAST:event_statusTicketsButtonActionPerformed

    private void setPassengerComboBoxes() {
        bookingPassengerComboBox.removeAllItems();
        cancelPassengerComboBox.removeAllItems();
        statusPassengerBookingsNameComboBox.removeAllItems();
        ArrayList<String> passengerList = passengerQueries.getAllPassengers();
        for (String passenger : passengerList) {
            bookingPassengerComboBox.addItem(passenger);
            cancelPassengerComboBox.addItem(passenger);
            statusPassengerBookingsNameComboBox.addItem(passenger);
        }
    }
    
    private void setFlightComboBoxes() {
        statusTicketsFlightComboBox.removeAllItems();
        bookingFlightComboxBox.removeAllItems();
        dropFlightComboBox.removeAllItems();
        ArrayList<String> flightList = flightQueries.getAllFlightNames();
        for (String flightName : flightList) {
            statusTicketsFlightComboBox.addItem(flightName);
            bookingFlightComboxBox.addItem(flightName);
            dropFlightComboBox.addItem(flightName);
        }
    }
    
    private void setDayComboBoxes() {
        bookingDayComboBox.removeAllItems();
        statusTicketsDayComboBox.removeAllItems();
        statusWaitlistDayComboBox.removeAllItems();
        cancelDayComboBox.removeAllItems();
        ArrayList<LocalDate> dayList = dayQueries.getAllDays();
        for (LocalDate day : dayList) {
            String dayString = day.toString();
            bookingDayComboBox.addItem(dayString);
            statusTicketsDayComboBox.addItem(dayString);
            statusWaitlistDayComboBox.addItem(dayString);
            cancelDayComboBox.addItem(dayString);
        }
    }
    
    private void setMonthComboBox() {
        monthComboBox.addItem("January");
        monthComboBox.addItem("February");
        monthComboBox.addItem("March");
        monthComboBox.addItem("April");
        monthComboBox.addItem("May");
        monthComboBox.addItem("June");
        monthComboBox.addItem("July");
        monthComboBox.addItem("August");
        monthComboBox.addItem("September");
        monthComboBox.addItem("October");
        monthComboBox.addItem("November");
        monthComboBox.addItem("December");       
    }
    
    private int convertMonth() {
        String monthString = String.valueOf(monthComboBox.getSelectedItem());
        int month = 1; // default to January
        switch (monthString) {
            case "January":
                month = 1;
                break;
            case "February":
                month = 2;
                break;
            case "March":
                month = 3;
                break;
            case "April":
                month = 4;
                break;
            case "May":
                month = 5;
                break;
            case "June":
                month = 6;
                break;
            case "July":
                month = 7;
                break;
            case "August":
                month = 8;
                break; 
            case "September":
                month = 9;
                break;
            case "October":
                month = 10;
                break;
            case "November":
                month = 11;
                break;
            case "December":
                month = 12;
                break;    
            default:
                month = 1;
        }
        return month;
    }
    
    private void addPassengerHandler() {
        String newPassengerName = passengerNameTextField.getText();
        String message = null;
        if (!newPassengerName.isEmpty()) {
            int result = passengerQueries.addPassenger(newPassengerName);
            if (result == 1) {
                message = String.format("Passenger %s added.", newPassengerName);
                setPassengerComboBoxes();
            }
            if (result == PassengerQueries.DUPKEY) {
                message = String.format("Passenger %s already added.", newPassengerName);
            }
            if (result == PassengerQueries.FAIL) {
                message = String.format("Error: Passenger %s was not added.", newPassengerName);
            }
        }
        else {
            message = "Please enter a passenger name.";
        }
        passengerMessageLabel.setText(message);
        passengerNameTextField.selectAll();
    }

    
    private void addDayHandler() {
        
        // Get selected day, month, and year from comboboxes
        int selectedDay = Integer.parseInt(dayTextField.getText());
        int selectedMonth = convertMonth();
        int selectedYear = Integer.parseInt(yearTextField.getText());
        
        String message;
        
        // Attempt to make a day
        LocalDate newDay = null;
        try {
            newDay = LocalDate.of(selectedYear, selectedMonth, selectedDay);
            // Attempt to add the day
            int result = dayQueries.addDay(newDay);

            switch (result) {
                case BookingQueries.FAIL:
                    message = "Error: Failed to add day.";
                    break;
                case BookingQueries.DUPKEY:
                    message = "Day already added.";
                    break;
                case 1:
                    message = "Day added.";
                    setDayComboBoxes();
                    break;
                default:
                    message = "Failed to add day.";
            }
        } catch (DateTimeException e) {
            message = "Invalid date.";
            e.printStackTrace();
        }

        addDayMessage.setText(message);
    }

    private void cancelFlightsHandler() {
        // Get selected flight, day, and passenger from comboboxes
        String selectedPassenger = String.valueOf(cancelPassengerComboBox.getSelectedItem());
        String selectedDayStr = String.valueOf(cancelDayComboBox.getSelectedItem());
        LocalDate selectedDay = LocalDate.parse(selectedDayStr, DateTimeFormatter.ISO_LOCAL_DATE);

        // Cancel all flights for that passenger on that day
        ArrayList<String> results = bookingQueries.cancelBooking(selectedPassenger, selectedDay);

        // Clear all current text
        cancelResultsTextArea.setText(null);

        for (String result : results) {
            cancelResultsTextArea.append(String.format("%s%n", result));
        }
    }

    private void addFlightHandler() {
        // Get selected flight name and number of seats from text fields
        String selectedFlightName = addFlightNameTextField.getText();
        int selectedSeats = Integer.parseInt(addFlightSeatsTextField.getText());

        String message;

        if (selectedSeats < 1) {
            message = "Enter seats > 0";
        }
        else {
            int result = flightQueries.addFlight(new Flight(selectedFlightName, selectedSeats));
            switch (result) {
                case FlightQueries.FAIL:
                    message = "Error: Failed to add flight.";
                    break;
                case FlightQueries.DUPKEY:
                    message = "Flight already added.";
                    break;
                case 1:
                    message = "Flight added.";
                    setFlightComboBoxes();
                    break;
                default:
                    message = "Failed to add flight.";
            }
        }

        addFlightMessage.setText(message);
    }

    private void dropFlightHandler() {
        // Get selected flight from comboboxes
        String selectedFlight = String.valueOf(dropFlightComboBox.getSelectedItem());

        // Drop flight and attempt to rebook passengers
        ArrayList<String> results = flightQueries.dropFlight(selectedFlight);
        setFlightComboBoxes();

        // Clear all current text
        dropFlightTextArea.setText(null);

        for (String result : results) {
            dropFlightTextArea.append(String.format("%s%n", result));
        }
    }

    private void bookFlightHandler() {
        // Get selected flight, day, and passenger from comboboxes
        String selectedFlight = String.valueOf(bookingFlightComboxBox.getSelectedItem());
        String selectedDayStr = String.valueOf(bookingDayComboBox.getSelectedItem());
        LocalDate selectedDay = LocalDate.parse(selectedDayStr, DateTimeFormatter.ISO_LOCAL_DATE);
        String selectedPassenger = String.valueOf(bookingPassengerComboBox.getSelectedItem());
        
        // Attempt to book the passenger
        // Result will equal: 0 (fail), Booking.TICKETED, or Booking.WAITLIST
        int result = bookingQueries.addBooking(selectedPassenger, selectedFlight, selectedDay);
        
        String message = null;
        
        switch (result) {
            case BookingQueries.FAIL:
                message = "Error: Failed to book flight.";
                break;
            case BookingQueries.DUPKEY:
                message = "Passenger already booked.";
                break;
            case Booking.TICKETED:
                message = String.format("Passenger %s successfully booked on flight %s on day %s.", 
                        selectedPassenger, selectedFlight, selectedDay);
               break;
            case Booking.WAITLIST:
                message = String.format("Flight %s on day %s is full. Passenger %s added to waitlist.",
                        selectedFlight, selectedDay, selectedPassenger);
                break;
            default:
                message = "Failed to book flight.";
        }
        
        bookingMessageLabel.setText(message);
    }
    
    public void statusTicketsByFlightDayHandler() {
        statusTicketsTextArea.setText(null); // clear existing text
                
        String selectedFlight = String.valueOf(statusTicketsFlightComboBox.getSelectedItem());
        String selectedDayStr = String.valueOf(statusTicketsDayComboBox.getSelectedItem());
        LocalDate selectedDay = LocalDate.parse(selectedDayStr, DateTimeFormatter.ISO_LOCAL_DATE);
        
        ArrayList<Booking> tickets = bookingQueries.getTicketsByFlightDay(selectedFlight, selectedDay);
        
        for (Booking ticket : tickets) {
            statusTicketsTextArea.append(String.format("%s%n", ticket.getPassengerName()));
        }
    }
    
    public void statusWaitlistByDayHandler() {
        statusWaitlistTextArea.setText(null); // clear existing text

        String selectedDayStr = String.valueOf(statusWaitlistDayComboBox.getSelectedItem());
        LocalDate selectedDay = LocalDate.parse(selectedDayStr, DateTimeFormatter.ISO_LOCAL_DATE);

        ArrayList<Booking> waitlist = bookingQueries.getWaitlistByDay(selectedDay);

        for (Booking w : waitlist) {
            statusWaitlistTextArea.append(
                    String.format("Flight %s: %s%n",
                            w.getFlightName(),
                            w.getPassengerName()));
        }
    }

    public void statusPassengerBookingsHandler() {
        statusPassengerBookingsTextArea.setText(null); // clear existing text

        String selectedPassengerStr = String.valueOf(
                statusPassengerBookingsNameComboBox.getSelectedItem());

        ArrayList<Booking> bookings = bookingQueries.getBookingsByPassenger(selectedPassengerStr);

        for (Booking b : bookings) {

            int status = b.getStatus();

            String statusText = "Unknown";
            if (status == Booking.TICKETED) {
                statusText = "Ticketed";
            }
            if (status == Booking.WAITLIST) {
                statusText = "Waitlist";
            }
            statusPassengerBookingsTextArea.append(
                    String.format("%s: Flight %s on %s%n",
                            statusText,
                            b.getFlightName(),
                            b.getDay()));
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDayButton;
    private javax.swing.JLabel addDayMessage;
    private javax.swing.JPanel addDayPanel;
    private javax.swing.JButton addFlightButton;
    private javax.swing.JLabel addFlightMainLabel;
    private javax.swing.JLabel addFlightMessage;
    private javax.swing.JLabel addFlightNameLabel;
    private javax.swing.JPanel addFlightNamePanel;
    private javax.swing.JTextField addFlightNameTextField;
    private javax.swing.JLabel addFlightSeatsLabel;
    private javax.swing.JPanel addFlightSeatsPanel;
    private javax.swing.JTextField addFlightSeatsTextField;
    private javax.swing.JButton bookingButton;
    private javax.swing.JComboBox<String> bookingDayComboBox;
    private javax.swing.JLabel bookingDayLabel;
    private javax.swing.JPanel bookingDayPanel;
    private javax.swing.JComboBox<String> bookingFlightComboxBox;
    private javax.swing.JLabel bookingFlightLabel;
    private javax.swing.JPanel bookingFlightPanel;
    private javax.swing.JLabel bookingMessageLabel;
    private javax.swing.JPanel bookingPanel;
    private javax.swing.JComboBox<String> bookingPassengerComboBox;
    private javax.swing.JLabel bookingPassengerLabel;
    private javax.swing.JPanel bookingPassengerPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox<String> cancelDayComboBox;
    private javax.swing.JLabel cancelDayLabel;
    private javax.swing.JPanel cancelDayPanel;
    private javax.swing.JPanel cancelPanel;
    private javax.swing.JComboBox<String> cancelPassengerComboBox;
    private javax.swing.JLabel cancelPassengerLabel;
    private javax.swing.JPanel cancelPassengerPanel;
    private javax.swing.JScrollPane cancelResultsScrollPane;
    private javax.swing.JTextArea cancelResultsTextArea;
    private javax.swing.JLabel dayLabel;
    private javax.swing.JPanel dayPanel;
    private javax.swing.JTextField dayTextField;
    private javax.swing.JButton dropFlightButton;
    private javax.swing.JComboBox<String> dropFlightComboBox;
    private javax.swing.JLabel dropFlightLabel;
    private javax.swing.JLabel dropFlightMainLabel;
    private javax.swing.JPanel dropFlightPanel;
    private javax.swing.JScrollPane dropFlightScrollPane1;
    private javax.swing.JTextArea dropFlightTextArea;
    private javax.swing.JPanel flightPanel;
    private javax.swing.JLabel flightSchedulerTitle;
    private javax.swing.JTabbedPane mainTabbedPane;
    private javax.swing.JComboBox<String> monthComboBox;
    private javax.swing.JLabel monthLabel;
    private javax.swing.JPanel monthPanel;
    private javax.swing.JButton passengerAddButton;
    private javax.swing.JLabel passengerMessageLabel;
    private javax.swing.JLabel passengerNameLabel;
    private javax.swing.JPanel passengerNamePanel;
    private javax.swing.JTextField passengerNameTextField;
    private javax.swing.JPanel passengerPanel;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JButton statusPassengerBookingsButton;
    private javax.swing.JLabel statusPassengerBookingsMainLabel;
    private javax.swing.JComboBox<String> statusPassengerBookingsNameComboBox;
    private javax.swing.JLabel statusPassengerBookingsNameLabel;
    private javax.swing.JPanel statusPassengerBookingsNamePanel;
    private javax.swing.JScrollPane statusPassengerBookingsScrollPane;
    private javax.swing.JTextArea statusPassengerBookingsTextArea;
    private javax.swing.JPanel statusTIcketsFlightPanel;
    private javax.swing.JButton statusTicketsButton;
    private javax.swing.JComboBox<String> statusTicketsDayComboBox;
    private javax.swing.JLabel statusTicketsDayLabel;
    private javax.swing.JPanel statusTicketsDayPanel;
    private javax.swing.JComboBox<String> statusTicketsFlightComboBox;
    private javax.swing.JLabel statusTicketsFlightLabel;
    private javax.swing.JLabel statusTicketsMainLabel;
    private javax.swing.JScrollPane statusTicketsScrollPane;
    private javax.swing.JTextArea statusTicketsTextArea;
    private javax.swing.JButton statusWaitlistButton;
    private javax.swing.JComboBox<String> statusWaitlistDayComboBox;
    private javax.swing.JLabel statusWaitlistDayLabel;
    private javax.swing.JPanel statusWaitlistDayPanel;
    private javax.swing.JLabel statusWaitlistMainLabel;
    private javax.swing.JScrollPane statusWaitlistScrollPane;
    private javax.swing.JTextArea statusWaitlistTextArea;
    private javax.swing.JLabel yearLabel;
    private javax.swing.JPanel yearPanel;
    private javax.swing.JTextField yearTextField;
    // End of variables declaration//GEN-END:variables
}
